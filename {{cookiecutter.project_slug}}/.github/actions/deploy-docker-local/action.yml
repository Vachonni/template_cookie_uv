name: 'Deploy Docker Container'
description: 'Deploys (or updates) a Docker container locally/self-hosted.'

inputs:
  image:
    description: 'Docker image to run'
    required: true
  name:
    description: 'Container name'
    required: true
  port:
    description: 'Port mapping host:container (e.g. 8001:8000)'
    required: true
  github_token:
    description: 'GitHub token for registry login'
    required: true
  github_actor:
    description: 'GitHub actor for registry login'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Log in to GHCR
      shell: bash
      run: |
        echo "{% raw %}${{ inputs.github_token }}{% endraw %}" | docker login ghcr.io -u "{% raw %}${{ inputs.github_actor }}{% endraw %}" --password-stdin

    - name: Pull image
      shell: bash
      run: |
        docker pull "{% raw %}${{ inputs.image }}{% endraw %}"

    - name: Stop existing container (if any)
      shell: bash
      run: |
        if docker ps -q -f name={% raw %}${{ inputs.name }}{% endraw %} | grep -q .; then
          docker stop {% raw %}${{ inputs.name }}{% endraw %}
        fi
        if docker ps -aq -f name={% raw %}${{ inputs.name }}{% endraw %} | grep -q .; then
          docker rm {% raw %}${{ inputs.name }}{% endraw %}
        fi

    - name: Run container
      shell: bash
      run: |
        docker run -d \
          --name {% raw %}${{ inputs.name }}{% endraw %} \
          -e APP_ENV \
          -p {% raw %}${{ inputs.port }}{% endraw %} \
          --restart unless-stopped \
          "{% raw %}${{ inputs.image }}{% endraw %}"

    - name: Verify container is running
      shell: bash
      run: |
        sleep 3
        if docker ps -q -f name={% raw %}${{ inputs.name }}{% endraw %} | grep -q .; then
          echo "✅ Container {% raw %}${{ inputs.name }}{% endraw %} is running"
        else
          echo "❌ Container {% raw %}${{ inputs.name }}{% endraw %} failed to start"
          docker logs {% raw %}${{ inputs.name }}{% endraw %} || true
          exit 1
        fi
